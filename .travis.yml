os:
    - osx
    - linux

# https://docs.travis-ci.com/user/reference/osx/#OS-X-Version
# Default: 9.4
osx_image: xcode11.3  # macOS 10.14

# Linux Ubuntu Precise
sudo: required
dist: trusty
group: travis_latest

language: node_js
node_js:
    - '10'

cache:
    directories:
        - $HOME/.electron

addons:
    apt:
        packages:
            - icnsutils
            - graphicsmagick
            - gcc-multilib
            - g++-multilib

before_install:
    - git --version
    - git config --global user.name "Travis CI"
    - git config --global user.email "travis@travis-ci.org"
    - |
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            brew update;
        fi
    - npm install -g npm@latest
    - npm --version

install:
    - travis_wait 40 npm install

script:
    - npm run build

after_success:
    - npm run coveralls
    - mkdir -p releases
    - PRODUCT_NAME='Rose3D'
    - PACKAGE_NAME=`node -e "console.log(require('./src/package.json').name)"`
    - PACKAGE_VERSION=`node -e "console.log(require('./src/package.json').version)"`
    - RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}
    - COMMIT_LOG=`git log -1 --format='%ci %H %s'`
    - |
        # build:mac-x64
        if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
            # https://github.com/electron-userland/electron-osx-sign/issues/83
            # Temporarily Bypass Gatekeeper
            sudo spctl --master-disable;
            sudo spctl --status;
            travis_wait 30 npm run build:mac-x64;
            ls -al output output/*;
            cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}.dmg" "releases/${RELEASE}-mac-x64.dmg";
            ls -al releases/*;
        fi
    - |
        # build:linux-x64
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            npm run build:linux-x64;
            ls -al output output/*;
            cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_amd64.deb" "releases/${RELEASE}-linux-amd64.deb";
            pushd releases;
            ln -sf ../output/linux-unpacked "${RELEASE}-linux-x64";
            tar zcfh "${RELEASE}-linux-x64.tar.gz" "${RELEASE}-linux-x64";
            rm -f "${RELEASE}-linux-x64";
            popd;
            ls -al releases/*;
        fi
    - |
        # build:linux-ia32
        if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
            npm run build:linux-ia32;
            ls -al output output/*;
            cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_i386.deb" "releases/${RELEASE}-linux-i386.deb";
            pushd releases;
            ln -sf ../output/linux-ia32-unpacked "${RELEASE}-linux-ia32";
            tar zcfh "${RELEASE}-linux-ia32.tar.gz" "${RELEASE}-linux-ia32";
            rm -f "${RELEASE}-linux-ia32";
            popd;
            ls -al releases/*;
        fi

before_deploy:
    - echo "Deploying to GitHub releases"

deploy:
    provider: releases
    api_key:
        secure: "$API_KEY"
    file_glob: true
    file:
        - 'releases/*.*'
    overwrite: true
    skip_cleanup: true
    on:
        # https://docs.travis-ci.com/user/deployment#Conditional-Releases-with-on
        tags: true  # Deploy app only when a tag is applied to the commit
        node: '10'
        repo: Leykinmg/rose3d
